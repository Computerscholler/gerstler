                                ==Phrack Inc.==

                      Volume Two, Issue 23, File 4 of 12

       <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
       <>                                                            <>
       <>                           Utopia                           <>
       <>                           ~~~~~~                           <>
       <>         Chapter One of The Future Transcendent Saga        <>
       <>                                                            <>
       <>           An Introduction To The World Of Bitnet           <>
       <>                                                            <>
       <>                Presented by Knight Lightning               <>
       <>                       January 1, 1989                      <>
       <>                                                            <>
       <>               Special Thanks To Jester Sluggo              <>
       <>                                                            <>
       <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>


           Welcome To The Next MILLENNIUM Of The Communications Realm
                              The Future is NOW!

As most people will agree, college and university computers are the easiest to
gain access to, both legally and illegally.  Bitnet is only one of the many
interconnected wide area networks, but I felt that it was the most important to
discuss because all major colleges and universities are connected by it and as
such creating an almost utopian society for the technologically inclined.  It's
free, legal, and world encompassing -- anything that incorporates "free" with
"legal" and is useful has to hold some sort of perfection and thus the name of
this file.

For the people already on Bitnet, this file may seem somewhat basic and most
likely contains information that you are thoroughly aware of, but you never w
know what a little extra reading might lead you to discover.  Once again
welcome to the future... a future where limits are unknown.

:Knight Lightning

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                             The Origin Of BITNET
                             ~~~~~~~~~~~~~~~~~~~~
                               by Jester Sluggo

In 1981, the City University of New York (CUNY) surveyed universities on the
east coast of the United States and Canada, inquiring whether there was
interest in creating and easy-to-use, economical network for interuniversity
communication between scholars.  The response was positive.  Many shared the
CUNY belief in the importance of computer-assisted communication between
scholars.  The first link of the new network, called Bitnet, was established
between CUNY and Yale University in May 1981.  The term BITNET is an acronym
that stands for "Because It's Time NETwork."

The network technology chosen for Bitnet was determined by the availability
of the RSCS software on the IBM computers at the initial sites.  The RSCS is
simple and effective, and most IBM VM/CMS computer systems have it installed
for local communications, supporting file transfer and remote job entry
services.  The standard Bitnet links are leased telephone lines running 9600
bps.  Although the initial nodes were IBM machines in university computers
centers, the network is in no way restricted to such systems.  Any computer
with an RSCS emulator can be connected to Bitnet.  Emulators are available for
Digital Equipment Corporation VAX/VMS systems, VAX-UNIX systems, and for
Control Data Corporation Cyber systems and others.  Today, more than one-third
of the computers on Bitnet are non-IBM systems.

There is also some talk in the Bitnet scientific community of a merger between
Bitnet and CSnet (Computer Science Network).  It is unknown when or if such a
merger will take place, but it is only a step in the right direction.

Note:  NetNorth is the Canadian division of Bitnet and EARN is the European
       division of Bitnet.  They are all directly connected and together serve
       as one network and not three.  It is often referred to as
       BITNET/NetNorth/EARN.
_______________________________________________________________________________

The Basics Of Bitnet
~~~~~~~~~~~~~~~~~~~~
In order to make any sense out of this file, you should first have a basic
understanding of mainframes and userids, etc.  Since most readers of Phrack are
computer enthusiasts, there is a pretty good chance that you understand these
things already.   If not, you may want to find documentation on the topic.  The
Mentor's Beginning Hackers Guide, which was published in Phrack Inc. XXII
contains some information that might help you.  The concepts presented in this
file are not terrible difficult to understand, but you should not jump into
this totally unprepared either.

You should also be a little familiar with the type of hardware and operating
system you will be using.  Most IBM systems in Bitnet run VM/CMS.  The Digital
Equipment Corporation (DEC) VAX systems usually run an operating system called
VMS along with a software package called JNET which allows them to communicate
via Bitnet.  I will be referring to VM/CMS and VMS/JNET throughout this file.
I myself currently use an IBM 4381 that runs VM/CMS and thus I am much more
familiar with that type of system.

Try to think of the mainframe as the telephone and Bitnet as the telephone
lines.  You see, the mainframe you log onto is connected to mainframes at other
universities and institutions.  The connection is usually a high-speed leased
line, a special sort of telephone connection.  In a way, these computers are
always on the phone with each other (except when links go down, discussed in
the section on MESSAGES).  This particular network is what is known as a "store
and forward" network.  This means that if I send something to someone in Los
Angeles, the computers in the network between New York and California will
store and forward it from computer to computer until it reaches it's
destination.

In Bitnet, there is only one way from "Point A" to "Point B."  A small piece of
the network might look like this:

              ---    ---    ---
             | A |--| B |--| C |
              ---    ---    ---
                      |
                     ---    ---    ---    ---    ---
                    | D |--| E |--| F |--| G |--| H |
                     ---    ---    ---    ---    ---
                      |                    |
              ---    ---                  ---    ---
             | I |--| J |                | K |--| L |
              ---    ---                  ---    ---
                                           |
                                   ---    ---    ---    ---
                                  | M |--| N |--| O |--| P |
                                   ---    ---    ---    ---

Those boxes represent computers in the network, and the dashes between them are
the leased lines.  If I am at computer "A" and I send a file to someone at
computer "N" it would travel the following path:

                              A-B-D-E-F-G-K-N

Actual topology maps are available for download from LISTSERV@BITNIC, but we
will be discussing servers later in this file.  Like I mentioned before, there
is only one route between any two nodes and there is simply no way to bypass a
disconnected link.

Each of the computers in BITNET is called a "node" and has a unique name that
identifies it to the other nodes.  For example, one of the mainframe computers
at the University Of Missouri-Columbia has the nodename UMCVMB.  So what does
that mean exactly?  Well in this case, UMC comes from the name of the school,
VM comes from the Virtual Memory operating system, and B is just an
alpha-numerical identifier.  At one time there was a UMCVMA, but that system
was taken down a couple of years ago.  One thing to note here is that although
this particular node can be broken down into its parts, many nodes do not
follow this pattern and some nodes have "aliases."  An alias is just another
name for the node and both names are recognized by all Bitnet facilities.  An
example of this is STANFORD.  The nodes STANFORD and FORSYTHE are the same
place so...

                       CYPHER@STANFORD = CYPHER@FORSYTHE

Your userid in combination with the name of your node is your "network
address."  It is usually written in the format userid@node (read "userid at
node").  For example, the name of my node is UMCVMB, and my userid is C483307.
Therefore, my network address is C483307@UMCVMB.  If I know the userid@node of
someone in the network, I can communicate with that person, and he/she can
communicate with me.  I have found many interesting people on the networks.
Making use of the direct chatting capabilities of Bitnet I am able to talk to
them in "real-time."  You can do this too, all you need to know are a few
commands.  This is explained in part two.


Messages
~~~~~~~~
There are three basic methods of communicating via Bitnet:  MAIL, MESSAGE, and
FILE.  The reason you would choose one over the other for a particular
application will become clear after a little explanation.

The MESSAGE is the fastest and most convenient method of communication
available through Bitnet.  It is the network's equivalent of a telephone
conversation.  The difference of course is that the words are typed instead of
spoken.  The message you type is transmitted immediately (well, quickly) to its
destination.  In BITNET this destination is the network address (userid@node)
of the person you want to contact.  If the person you are contacting is logged
on, the message will be displayed on their screen.  If not, their computer
will tell you so by sending you a message.  In this case, your message is lost
forever.  In other words, no one is there to answer the phone.  However, many
people run a program called GONE (and there are other similar programs) which
acts like an answering machine and holds your message until they log on.  Some
universities do not allow this program because it uses a lot of CPU time.  If
your school or mainframe does not allow it, do not try to sneak its use,
because it is very easy to detect.

One important thing to mention is that not all nodes allow interactive chat.
Some nodes are simply not advanced enough for it and you will a receive a
message telling you this whenever you try to chat with them.  However, this
situation is less common.

The command to send messages depends on your computer and system software.
People on VM/CMS systems would type something like this:

     TELL userid AT node message OR TELL userid@node message

For example:

     TELL MENTOR AT PHOENIX Hey, whats new on The Phoenix Project?
          +-----    +------ +-------------------------------------
          |         |       |
          |         |       +----------- the message you are sending
          |         |
          |         +------------------- the node of the recipient
          |
          +----------------------------- the userid of the recipient


People on VAX/VMS systems using the JNET networking software would use this
syntax:

     SEND userid@node "message"

For example:

     SEND MENTOR@PHOENIX "Hey, whats new on The Phoenix Project?"
          +----- +------ +---------------------------------------
          |      |       |
          |      |       +-------------- the message you are sending
          |      |
          |      +---------------------- the node of the recipient
          |
          +----------------------------- the userid of the recipient


The quotes around the message are optional.  However, the JNET networking for
VAX/VMS will translate your entire message into upper-case characters if you
DO NOT use them.  Many people find receiving messages in all upper case to be
extremely annoying.

For more information on the TELL and SEND commands, you should consult your
local system documentation.

When a message arrives on your screen, it will look something like this:

     FROM PHOENIX(MENTOR):  Hello!  Things are great here, you?

Unfortunately there is a downside to everything and Bitnet Messages are no
exception.  Text sent by message must be short.  In general, your message
length can be one line, about the width of your screen.  In other words, you
won't be sending someone a copy of Phrack World News via the TELL command.

Also, you can only communicate with someone in this way when they are logged
on.  Considering time zone differences (you may find yourself talking to
people in Europe, Israel, or Australia) this is often quite inconvenient.

Lastly, there is the problem of links that I call LinkDeath.  If the connection
to the node you want to contact is broken (by for example, a disconnected phone
line), you'll receive an error message and whatever you sent is gone.  This can
be very annoying if it should occur during a conversation.  The LinkDeath may
last a few minutes or several hours.  Often times, a link will go down for the
weekend and you are simply out of luck.  Even worse is when it is the link that
connects your mainframe to rest of Bitnet... you are cut off.

However, messages are very far from useless.  As I will demonstrate in chapter
two, TELL and SEND are extremely helpful in accessing the many servers on
Bitnet.


Files
~~~~~
FILES are another way to communicate over Bitnet.  The text files and programs
that you store on your computer can be transmitted to users at other nodes.
This is one of the methods that I use to distribute Phrack issues across not
only the country, but the world.  People on VM/CMS systems would use a syntax
like this:

     SENDFILE filename filetype filemode userid AT node

For example:

     SENDFILE PHRACK TEXTFILE A PROPHET AT PHRACKVM
              +---------------- +------------------
              |                 |
              |                 +------- the address of the recipient
              |
              +------------------------- the file you are sending


However, at my particular node the command would read:

     SENDFILE PHRACK TEXTFILE A TO (nickname)

For some reason at my node, you cannot use SENDFILE to send a file to anyone
unless they are in your NAMES file.  The NAMES file is a database type of list
that translates userid@node into nicknames to make it easier to chat with
people.  This way you can use their nickname instead of the tiresome
userid@node.  The filemode, in this example "A", is the disk that the file
"PHRACK TEXTFILE" is on.  In case you were wondering, with the exception of my
address, most of the addresses in this file like PROPHET@PHRACKVM or
MENTOR@PHOENIX are bogus and just examples for this presentation.

The syntax for VMS/JNET systems is quite similar:

     SEND/FILE filename.extension userid@node

For example:

     SEND/FILE PHRACK.TEXTFILE PROPHET@PHRACKVM
              +--------------- +---------------
              |                |
              |                +-------- the address of the recipient
              |
              +------------------------- the file you are sending


The file sent is stored in the "electronic mailbox" of the recipient until
he/she logs on.  People on VM/CMS systems would use the RECEIVE or RDRLIST
(shortened to "RL") commands to process files sent to them in this way.  People
on VAX/VMS systems would use the RECEIVE command.  You should check your local
documentation for more information on these commands.

SEND/FILE and SENDFILE are useful for sending programs or large volumes of data
like Phrack issues over the network.  However, they should not be used for
everyday communication because there is a much easier way -- the MAIL.


Mail
~~~~
The other form of Bitnet communication has been given a very apt name:  MAIL
(often called "electronic mail" or "e-mail").  Just like regular postal service
mail, you provide an address, return address, and text.  Software for sending
mail software differs from site to site, so you will have to look in your local
documentation for information.  On my particular node, the return address (your
address) is automatically placed in the letter.  This presentation should be
able to shed some light on what most mail looks like and how it works.

Mail files are really just specially formatted text files.  The feature that
makes them different is the "mail header."  This tells a Bitnet system and your
mail software that it is not a regular text file.  It looks something like
this:

                                           The address of the recipient
                                                                      |
                                                         The subject  |
                                                                   |  |
                                                     Your address  |  |
                                                                |  |  |
                                                   Todays date  |  |  |
                                                             |  |  |  |
     Date:         Fri, 29 Dec 88 23:52:00 EDT            <--+  |  |  |
     From:         Forest Ranger <RANGER@STLVAX1>         <-----+  |  |
     Subject:      Cable Pair Busted For Child Molestation<--------+  |
     To:           Phrack World News <KNIGHT@MSPVMA>      <-----------+


An entire mail message would look like this:


  +---------------- Mail header
  |
  |  Date:         Fri, 29 Dec 88 23:52:00 EDT
  |  From:         Forest Ranger <RANGER@STLVAX1>
  |  Subject:      Cable Pair Busted For Child Molestation
  |  To:           Phrack World News <KNIGHT@MSPVMA>
  +  ========================================================================

  +  Have you seen the newspapers?  Is this good news, or what?  I think that
  |  the ramifications are startling.  This is one more step on the road to a
  |  higher civilization.  I hope he gets what he deserves.  Keep in touch, I
  |  will send more information later.
  |
  +---------------- Mail text


Mail has a number of advantages.  The size of a mail file is limited only by
you and is the only way to send files to networks other than Bitnet (However, I
do not recommend that you transmit anything longer than 3000 lines).  When your
mail reaches the destination address, it will be stored in the user's mailbox
until they read it.  If the links to that particular node are disconnected,
your mail will be held until the path is clear for the mail to continue on its
route to the recipient's mailbox.

The disadvantage of mail is that it is, indeed, slower than messages.  The
longer your mail file, the longer it will take to get from Point A to Point B.
_______________________________________________________________________________

Conclusion
~~~~~~~~~~
Don't despair, this is only the conclusion to this file.  The best functions of
Bitnet are yet to be described.  Join me in the second chapter of The Future
Transcendent Saga -- Foundations Upon The Horizon.

Also included in this issue of Phrack are sitelists for Bitnet.  Actual node
directories are available from LISTSERV@BITNIC, but they are much too large to
be printed here.  However, the files that are included list the names of the
universities and institutions that are connected to Bitnet without their node
addresses (some institutions have over 30+ nodes).  If you attend a college or
university that is hooked into Bitnet, then join me in the realm of infinite
discovery.  When you do, drop me a line...

:Knight Lightning (C483307@UMCVMB)


For related reading please see;

An Insight On Wide-Area Networks Part 2 by Jester Sluggo
(Phrack Inc. Issue 6, file 8)

Communications Of The ACM
_______________________________________________________________________________
